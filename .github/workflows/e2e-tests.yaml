name: Run e2e test
on:
  push:
jobs:
  build_image:
    runs-on: ubuntu-latest
    concurrency: ci-${{ github.ref }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: "imoshtokill/threat-dragon-dev:latest"
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  test:
    runs-on: ubuntu-latest
    concurrency: ci-${{ github.ref }}
    needs: build_image
    services:
      threatdragon:
        image: imoshtokill/threat-dragon-dev:latest
        ports:
          - 3000:3000
        env:
          GITHUB_CLIENT_ID: ${{ secrets.CI_GITHUB_CLIENT_ID }}
          GITHUB_CLIENT_SECRET: ${{ secrets.CI_GITHUB_CLIENT_SECRET }}
          JWT_REFRESH_SIGNING_KEY: ${{ secrets.CI_JWT_REFRESH_SIGNING_KEY }}
          JWT_SIGNING_KEY: ${{ secrets.CI_JWT_SIGNING_KEY }}
          SESSION_ENCRYPTION_KEYS: ${{ secrets.CI_SESSION_ENCRYPTION_KEYS }}
          SESION_SIGNING_KEY: ${{ secrets.CI_SESSION_SIGNING_KEY }}
          SESSION_STORE: local

    steps:

      - name: Sleep for ten seconds
        run: sleep 10

      - name: Get docker logs
        run: docker logs "${{ job.services.threatdragon.id }}"

      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Get latest Firefox
        uses: browser-actions/setup-firefox@latest
        with:
          firefox-version: latest

      - name: Get stable Chrome
        uses: browser-actions/setup-chrome@latest
        with:
          chrome-version: stable

      - name: Install NPM Dependencies
        run: cd td.vue && npm ci

      - name: Run e2e tests
        run: cd td.vue && npm run test:e2e-ci
